{% import "header.jinja" as header with context %}
{% import "head.jinja" as head %}
<!DOCTYPE html>
<html lang="en">

{{ head.render_head(anime.title) }}

<body class="bg-secondary d-flex flex-column min-vh-100">
	{{ header.render_header(False, url_for('index') ) }}

	<script>
		function updateTag(id, tag) {
			$.ajax({
				type: "POST",
				url: "/anime_info/updateTag?id=" + id,
				data: {
					'tag': tag
				},
				// success: function (e) {
				//   alert(e);
				// }
			});
		}
	</script>

	<div class="d-flex flex-grow-1">
		<div class="row row-cols-md-2 row-cols-1 gx-3 w-100 mx-0">
			<div class="col d-flex align-items-center justify-content-center mt-3 p-5">
				<img class="shadow-lg bg-light rounded-3 mx-auto my-auto d-block" src='{{ anime.picture }}'
					onerror="if (this.src != '{{ url_for('static', filename='NotFound.svg') }}') this.src = '{{ url_for('static', filename='NotFound.svg') }}';"
					alt="Couldn't load the image!">

			</div>

			<div class="col px-4 py-5 mt-3 mb-2 text-center rounded-start shadow text-light bg-dark">
				<h1 class="display-5 fw-bold mb-4">{{ anime.title }}</h1>

				{% if user != None%}
				<div class="btn-group d-none d-sm-block" role="group" aria-label="Tag buttons H">
					{% for tag in tags %}
					<input type="radio" class="btn-check" name="radio_btn_tag_H" id="btnradioH{{ tag }}"
						autocomplete="off" onclick="updateTag({{ anime.id }}, '{{ tag }}')" {% if anime.tag|lower==tag|lower
						%}checked{% endif %} value={{ tag }}>
					<label class="btn btn-outline-{{ tag|lower }}" for="btnradioH{{ tag }}">{{ tag }}</label>
					{% endfor %}
				</div>

				<div class="btn-group-vertical d-block d-sm-none" role="group" aria-label="Tag buttons V">
					{% for tag in tags %}
					<input type="radio" class="btn-check" name="radio_btn_tag_V" id="btnradioV{{ tag }}"
						autocomplete="off" onclick="updateTag({{ anime.id }}, '{{ tag }}')" {% if anime.tag|lower==tag|lower
						%}checked{% endif %} value={{ tag }}>
					<label class="btn btn-outline-{{ tag|lower }} mt-1" for="btnradioV{{ tag }}">{{ tag }}</label>
					{% endfor %}
				</div>

				<div class="btn-group mt-4" role="group">
					<a type="button" class="btn btn-outline-primary" href="{{ url_for('torrents', id=anime.id) }}">
						Download torrents
					</a>

					{% if episodes != None and episodes|length > 0 %}
					<div class="btn-group" role="group">
						<button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown">
							Watch!
						</button>
						<ul class="dropdown-menu dropdown-menu-light" aria-labelledby="watchDropdown">
							<li class="dropdown-item dropdown-header">Episodes available:</li>
							<li>
								<hr class="dropdown-divider">
							</li>
							{% for episode in episodes %}
							<li>
								<a class="dropdown-item"
									href="{{ url_for('watch', id=anime.id, episode=episode.title) }}">
									{{ episode.title }}
								</a>
							</li>
							{% endfor %}
						</ul>
					</div>
					{% endif %}
				</div>
				{% if torrents|length > 0%}
				<div class="mt-4" id="torrent_progress">
					<div class="progress-stacked">
						{% for i, torrent in torrents|enumerate %}
						<div class="progress" role="progressbar" aria-valuemin="0" aria-valuemax="100"
							style="width: {{ torrent.progress }}%" data-id="{{ torrent.hash }}">
							<div
								class="progress-bar progress-bar-striped progress-bar-animated bg-{{ filterOptions[tags[i]]['color'] }}">
								{{ torrent.name }}
							</div>
						</div>
						{% endfor %}
					</div>

					<script>
						function updateProgress() {
							url = '{{ url_for('torrent_progress', id=anime.id) }}';
							const intervalId = setInterval(async () => {
								fetch(url)
									.then(response => response.json())
									.then(data => {
										let found = 0;
										let root = document.getElementById('torrent_progress');
										if (Object.keys(data.data).length > 0) {
											root.querySelectorAll('.progress').forEach(bar => {
												let hash = bar.dataset.id;
												if (hash in data.data) {
													bar.style.width = data.data[hash]['progress'] + '%';
													found++;
												} else {
													console.log(hash, data.data);
													bar.remove();
												}
											});
											if (found < Object.keys(data.data).length) {
												location.reload(true);
											}
										} else {
											root.remove();
											clearInterval(intervalId);
										}
									})
							},
								1000
							)
						}

						updateProgress();

					</script>
				</div>
				{% endif %}

				{% else %}
				<div class="alert alert-danger">
					Please login to watch an episode!
				</div>
				{% endif %}

				<p class="lead mt-4">{{ anime.synopsis }}</p>

				<p class="text-secondary">
					Rating: {{ anime.rating or '?' }}
					<br class="d-sm-none d-inline" />
					<span class="d-sm-inline d-none">-</span>
					{{ anime.episodes or 'No' }} episode {{- 's' if anime.episodes == None or anime.episodes > 1
					else ''
					}}
					{% if anime.duration %}
					({{ anime.duration }} min{{ " each" if anime.episodes and anime.episodes > 1 else "" }})
					{% endif %}
				</p>
				<p class="text-secondary">{{ anime|GetStatusText|safe }}</p>
				{% if user != None%}
				<a class="btn text-light" href="{{ url_for('anime_info', id=anime.id, reload=True) }}" role="button">Reload
					data</a>
				{% endif %}
			</div>
		</div>
	</div>
	{{ head.render_footer() }}
</body>

</html>